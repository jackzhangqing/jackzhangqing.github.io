<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Qzhang</title>
  
  <subtitle>奔赴山海, 保持热爱</subtitle>
  <link href="https://jackzhangqing.github.io/atom.xml" rel="self"/>
  
  <link href="https://jackzhangqing.github.io/"/>
  <updated>2023-09-15T13:04:35.755Z</updated>
  <id>https://jackzhangqing.github.io/</id>
  
  <author>
    <name>Qzhang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>The Different Qzhang</title>
    <link href="https://jackzhangqing.github.io/2023/09/15/The-Different-Me-Qzhang/"/>
    <id>https://jackzhangqing.github.io/2023/09/15/The-Different-Me-Qzhang/</id>
    <published>2023-09-15T06:08:45.206Z</published>
    <updated>2023-09-15T13:04:35.755Z</updated>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Qing-Zhang&quot;&gt;&lt;a href=&quot;#Qing-Zhang&quot; class=&quot;headerlink&quot; title=&quot;Qing Zhang&quot;&gt;&lt;/a&gt;Qing Zhang&lt;/h2&gt;&lt;h2 id=&quot;张青&quot;&gt;&lt;a href=&quot;#张青&quot; class=&quot;headerli</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Ubuntu常用命令</title>
    <link href="https://jackzhangqing.github.io/2023/09/09/Ubuntu%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://jackzhangqing.github.io/2023/09/09/Ubuntu%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2023-09-09T11:26:49.000Z</published>
    <updated>2023-09-09T11:29:10.555Z</updated>
    
    
      
      
    <summary type="html">&lt;p&gt;         linux                      window&lt;/p&gt;
&lt;p&gt;                cd：进入指定目录(均支持）&lt;/p&gt;
&lt;p&gt;         ls：列出目录          dir：列出目录&lt;/p&gt;
&lt;p&gt;       </summary>
      
    
    
    
    <category term="工业界" scheme="https://jackzhangqing.github.io/categories/%E5%B7%A5%E4%B8%9A%E7%95%8C/"/>
    
    <category term="大数据平台与架构" scheme="https://jackzhangqing.github.io/categories/%E5%B7%A5%E4%B8%9A%E7%95%8C/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%B9%B3%E5%8F%B0%E4%B8%8E%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="Ubuntu常用命令" scheme="https://jackzhangqing.github.io/tags/Ubuntu%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>大数据项目需要的最基本的技术</title>
    <link href="https://jackzhangqing.github.io/2023/09/09/%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%A1%B9%E7%9B%AE%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E5%9F%BA%E6%9C%AC%E7%9A%84%E6%8A%80%E6%9C%AF/"/>
    <id>https://jackzhangqing.github.io/2023/09/09/%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%A1%B9%E7%9B%AE%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E5%9F%BA%E6%9C%AC%E7%9A%84%E6%8A%80%E6%9C%AF/</id>
    <published>2023-09-09T11:18:46.000Z</published>
    <updated>2023-09-09T11:25:54.636Z</updated>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;大数据技术&quot;&gt;&lt;a href=&quot;#大数据技术&quot; class=&quot;headerlink&quot; title=&quot;大数据技术&quot;&gt;&lt;/a&gt;大数据技术&lt;/h2&gt;&lt;p&gt;1、Hadoop2x-HDFS[HA]&lt;br&gt;2、Hadoop2X-mapreduce&lt;br&gt;3、Hadoop2X-</summary>
      
    
    
    
    <category term="工业界" scheme="https://jackzhangqing.github.io/categories/%E5%B7%A5%E4%B8%9A%E7%95%8C/"/>
    
    <category term="大数据平台与架构" scheme="https://jackzhangqing.github.io/categories/%E5%B7%A5%E4%B8%9A%E7%95%8C/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%B9%B3%E5%8F%B0%E4%B8%8E%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="大数据项目所需要的技术" scheme="https://jackzhangqing.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%A1%B9%E7%9B%AE%E6%89%80%E9%9C%80%E8%A6%81%E7%9A%84%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>Scala类型系统与隐式转换8</title>
    <link href="https://jackzhangqing.github.io/2023/09/09/8-Scala%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%B8%8E%E9%9A%90%E5%BC%8F%E8%BD%AC%E6%8D%A2/"/>
    <id>https://jackzhangqing.github.io/2023/09/09/8-Scala%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%B8%8E%E9%9A%90%E5%BC%8F%E8%BD%AC%E6%8D%A2/</id>
    <published>2023-09-09T11:10:38.000Z</published>
    <updated>2023-09-09T11:12:27.949Z</updated>
    
    
      
      
    <summary type="html">&lt;p&gt;1.泛型&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1.类、特质、函数、方法可带有类型参数 

    //泛型类

    class Pair[T,S](val first:T,val second:S)  

    //泛型特质

    trait Pair[T]

    </summary>
      
    
    
    
    <category term="工业界" scheme="https://jackzhangqing.github.io/categories/%E5%B7%A5%E4%B8%9A%E7%95%8C/"/>
    
    <category term="大数据高级开发Spark" scheme="https://jackzhangqing.github.io/categories/%E5%B7%A5%E4%B8%9A%E7%95%8C/%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%AB%98%E7%BA%A7%E5%BC%80%E5%8F%91Spark/"/>
    
    
    <category term="Scala类型系统与隐式转换" scheme="https://jackzhangqing.github.io/tags/Scala%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%B8%8E%E9%9A%90%E5%BC%8F%E8%BD%AC%E6%8D%A2/"/>
    
  </entry>
  
  <entry>
    <title>Scala之函数式编程7</title>
    <link href="https://jackzhangqing.github.io/2023/09/09/7-Scala%E4%B9%8B%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B/"/>
    <id>https://jackzhangqing.github.io/2023/09/09/7-Scala%E4%B9%8B%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B/</id>
    <published>2023-09-09T11:05:20.000Z</published>
    <updated>2023-09-09T11:09:57.575Z</updated>
    
    
      
      
    <summary type="html">&lt;p&gt;函数式编程:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;函数式编程是种编程方式，它将电脑运算视为函数的计算。函数编程语言最重要的基础是λ演算（lambda calculus），而且λ演算的函数可以接受函数当作输入（参数）和输出（返回值）。 

和指令式编程相比，函数式编程强调函数的计算</summary>
      
    
    
    
    <category term="工业界" scheme="https://jackzhangqing.github.io/categories/%E5%B7%A5%E4%B8%9A%E7%95%8C/"/>
    
    <category term="大数据高级开发Spark" scheme="https://jackzhangqing.github.io/categories/%E5%B7%A5%E4%B8%9A%E7%95%8C/%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%AB%98%E7%BA%A7%E5%BC%80%E5%8F%91Spark/"/>
    
    
    <category term="Scala之函数式编程" scheme="https://jackzhangqing.github.io/tags/Scala%E4%B9%8B%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Scala之面向对象编程6</title>
    <link href="https://jackzhangqing.github.io/2023/09/09/6-Scala%E4%B9%8B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/"/>
    <id>https://jackzhangqing.github.io/2023/09/09/6-Scala%E4%B9%8B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/</id>
    <published>2023-09-09T10:33:31.000Z</published>
    <updated>2023-09-09T11:01:36.365Z</updated>
    
    
      
      
    <summary type="html">&lt;p&gt;修饰类的修饰符有:final,abstract,case,sealed,implicit(非顶级类,主构造器必须单参数)&lt;/p&gt;
&lt;p&gt;修饰对象的修饰符有:final,case,implicit(非顶级对象)&lt;/p&gt;
&lt;p&gt;修饰方法的修饰符有:override,implic</summary>
      
    
    
    
    <category term="工业界" scheme="https://jackzhangqing.github.io/categories/%E5%B7%A5%E4%B8%9A%E7%95%8C/"/>
    
    <category term="大数据高级开发Spark" scheme="https://jackzhangqing.github.io/categories/%E5%B7%A5%E4%B8%9A%E7%95%8C/%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%AB%98%E7%BA%A7%E5%BC%80%E5%8F%91Spark/"/>
    
    
    <category term="Scala之面向对象编程" scheme="https://jackzhangqing.github.io/tags/Scala%E4%B9%8B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Scala之模式匹配5</title>
    <link href="https://jackzhangqing.github.io/2023/09/09/5-Scala%E4%B9%8B%E6%A8%A1%E5%BC%8F%E5%8C%B9%E9%85%8D/"/>
    <id>https://jackzhangqing.github.io/2023/09/09/5-Scala%E4%B9%8B%E6%A8%A1%E5%BC%8F%E5%8C%B9%E9%85%8D/</id>
    <published>2023-09-09T10:31:26.000Z</published>
    <updated>2023-09-09T10:32:48.072Z</updated>
    
    
      
      
    <summary type="html">&lt;p&gt;1.模式匹配	&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1.1 格式

    express match&amp;#123;

        case value1 =&amp;gt; result1

        case value2 =&amp;gt; result2

        cas</summary>
      
    
    
    
    <category term="工业界" scheme="https://jackzhangqing.github.io/categories/%E5%B7%A5%E4%B8%9A%E7%95%8C/"/>
    
    <category term="大数据高级开发Spark" scheme="https://jackzhangqing.github.io/categories/%E5%B7%A5%E4%B8%9A%E7%95%8C/%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%AB%98%E7%BA%A7%E5%BC%80%E5%8F%91Spark/"/>
    
    
    <category term="Scala之模式匹配" scheme="https://jackzhangqing.github.io/tags/Scala%E4%B9%8B%E6%A8%A1%E5%BC%8F%E5%8C%B9%E9%85%8D/"/>
    
  </entry>
  
  <entry>
    <title>Scala之集合容器4</title>
    <link href="https://jackzhangqing.github.io/2023/09/09/4-Scala%E4%B9%8B%E9%9B%86%E5%90%88%E5%AE%B9%E5%99%A8/"/>
    <id>https://jackzhangqing.github.io/2023/09/09/4-Scala%E4%B9%8B%E9%9B%86%E5%90%88%E5%AE%B9%E5%99%A8/</id>
    <published>2023-09-09T10:29:30.000Z</published>
    <updated>2023-09-09T10:32:52.269Z</updated>
    
    
      
      
    <summary type="html">&lt;p&gt;1.集合 &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1.集合分为： 序列 集 映射
         	  Traversable(Trait) 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;       |&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;           Iterable(Trait) </summary>
      
    
    
    
    <category term="工业界" scheme="https://jackzhangqing.github.io/categories/%E5%B7%A5%E4%B8%9A%E7%95%8C/"/>
    
    <category term="大数据高级开发Spark" scheme="https://jackzhangqing.github.io/categories/%E5%B7%A5%E4%B8%9A%E7%95%8C/%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%AB%98%E7%BA%A7%E5%BC%80%E5%8F%91Spark/"/>
    
    
    <category term="Scala之集合容器" scheme="https://jackzhangqing.github.io/tags/Scala%E4%B9%8B%E9%9B%86%E5%90%88%E5%AE%B9%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Scala之容器基础语法3</title>
    <link href="https://jackzhangqing.github.io/2023/09/09/3-Scala%E4%B9%8B%E5%AE%B9%E5%99%A8%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
    <id>https://jackzhangqing.github.io/2023/09/09/3-Scala%E4%B9%8B%E5%AE%B9%E5%99%A8%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</id>
    <published>2023-09-09T10:27:04.000Z</published>
    <updated>2023-09-09T10:32:50.557Z</updated>
    
    
      
      
    <summary type="html">&lt;p&gt;1.数组:存放一系列元素的容器&lt;br&gt;    1.分类&lt;br&gt;        不可变数组 定长数组 Array&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    可变数组  缓冲数组 数组缓存  ArrayBuffer (集合,Seq)

        ArrayBuffer位于sc</summary>
      
    
    
    
    <category term="工业界" scheme="https://jackzhangqing.github.io/categories/%E5%B7%A5%E4%B8%9A%E7%95%8C/"/>
    
    <category term="大数据高级开发Spark" scheme="https://jackzhangqing.github.io/categories/%E5%B7%A5%E4%B8%9A%E7%95%8C/%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%AB%98%E7%BA%A7%E5%BC%80%E5%8F%91Spark/"/>
    
    
    <category term="Scala之容器" scheme="https://jackzhangqing.github.io/tags/Scala%E4%B9%8B%E5%AE%B9%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Scala之基础语法2</title>
    <link href="https://jackzhangqing.github.io/2023/09/09/2-Scala%E4%B9%8B%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
    <id>https://jackzhangqing.github.io/2023/09/09/2-Scala%E4%B9%8B%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</id>
    <published>2023-09-09T10:25:28.000Z</published>
    <updated>2023-09-09T10:26:16.434Z</updated>
    
    
      
      
    <summary type="html">&lt;p&gt;1.标识符  &lt;/p&gt;
&lt;p&gt;  大体上与Java一致。&lt;/p&gt;
&lt;p&gt;  特殊点:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1.Scala标识符中不允许出现$ 

2.反引号`` 可以将关键字等一些特殊字符使用反引号引起来，这样就变成了一个合法的标识符。

  eg:`return</summary>
      
    
    
    
    <category term="工业界" scheme="https://jackzhangqing.github.io/categories/%E5%B7%A5%E4%B8%9A%E7%95%8C/"/>
    
    <category term="大数据高级开发Spark" scheme="https://jackzhangqing.github.io/categories/%E5%B7%A5%E4%B8%9A%E7%95%8C/%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%AB%98%E7%BA%A7%E5%BC%80%E5%8F%91Spark/"/>
    
    
    <category term="Scala之基础语法" scheme="https://jackzhangqing.github.io/tags/Scala%E4%B9%8B%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Scala之基础语法1</title>
    <link href="https://jackzhangqing.github.io/2023/09/09/1-Scala%E4%B9%8B%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
    <id>https://jackzhangqing.github.io/2023/09/09/1-Scala%E4%B9%8B%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</id>
    <published>2023-09-09T10:23:09.000Z</published>
    <updated>2023-09-09T10:25:55.167Z</updated>
    
    
      
      
    <summary type="html">&lt;p&gt;认识：&lt;/p&gt;
&lt;p&gt;Scala 编程语言&lt;/p&gt;
&lt;p&gt;  头等公民：对象 函数&lt;/p&gt;
&lt;p&gt;  多范式的编程语言&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;面向对象

函数式编程
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;  函数式编程 &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1.高阶函数

2</summary>
      
    
    
    
    <category term="工业界" scheme="https://jackzhangqing.github.io/categories/%E5%B7%A5%E4%B8%9A%E7%95%8C/"/>
    
    <category term="大数据高级开发Spark" scheme="https://jackzhangqing.github.io/categories/%E5%B7%A5%E4%B8%9A%E7%95%8C/%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%AB%98%E7%BA%A7%E5%BC%80%E5%8F%91Spark/"/>
    
    
    <category term="Scala之基础语法" scheme="https://jackzhangqing.github.io/tags/Scala%E4%B9%8B%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Scala的定义、优点、如何使用</title>
    <link href="https://jackzhangqing.github.io/2023/09/09/Scala%E7%9A%84%E5%AE%9A%E4%B9%89%E3%80%81%E4%BC%98%E7%82%B9%E3%80%81%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8/"/>
    <id>https://jackzhangqing.github.io/2023/09/09/Scala%E7%9A%84%E5%AE%9A%E4%B9%89%E3%80%81%E4%BC%98%E7%82%B9%E3%80%81%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8/</id>
    <published>2023-09-09T10:20:58.000Z</published>
    <updated>2023-09-09T10:23:41.252Z</updated>
    
    
      
      
    <summary type="html">&lt;p&gt;1.scala是什么&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1.1定义

    1.scala是一门编程语言

    2.多范式的编程语言

        面向对象编程

        面向函数式编程 

    3.支持多平台的编程语言 

        JVM  .N</summary>
      
    
    
    
    <category term="工业界" scheme="https://jackzhangqing.github.io/categories/%E5%B7%A5%E4%B8%9A%E7%95%8C/"/>
    
    <category term="大数据高级开发Spark" scheme="https://jackzhangqing.github.io/categories/%E5%B7%A5%E4%B8%9A%E7%95%8C/%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%AB%98%E7%BA%A7%E5%BC%80%E5%8F%91Spark/"/>
    
    
    <category term="Scala的定义、优点、如何使用" scheme="https://jackzhangqing.github.io/tags/Scala%E7%9A%84%E5%AE%9A%E4%B9%89%E3%80%81%E4%BC%98%E7%82%B9%E3%80%81%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>Scala语言绪论</title>
    <link href="https://jackzhangqing.github.io/2023/09/09/Scala%E8%AF%AD%E8%A8%80%E7%BB%AA%E8%AE%BA/"/>
    <id>https://jackzhangqing.github.io/2023/09/09/Scala%E8%AF%AD%E8%A8%80%E7%BB%AA%E8%AE%BA/</id>
    <published>2023-09-09T10:11:27.000Z</published>
    <updated>2023-09-09T10:19:33.973Z</updated>
    
    
      
      
    <summary type="html">&lt;p&gt;1、安装认识Scala&lt;br&gt;2、了解Scala中的类型&lt;br&gt;3、如何声明定义变量&lt;br&gt;4、如何定义类&amp;#x2F;方法&amp;#x2F;对象&amp;#x2F;特质（接口&amp;#x2F;抽象类） 任何一门语言需要学习的3项&lt;br&gt;5、for表达式   》进阶map  foreach&lt;br</summary>
      
    
    
    
    <category term="工业界" scheme="https://jackzhangqing.github.io/categories/%E5%B7%A5%E4%B8%9A%E7%95%8C/"/>
    
    <category term="大数据高级开发Spark" scheme="https://jackzhangqing.github.io/categories/%E5%B7%A5%E4%B8%9A%E7%95%8C/%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%AB%98%E7%BA%A7%E5%BC%80%E5%8F%91Spark/"/>
    
    
    <category term="Scala语言绪论" scheme="https://jackzhangqing.github.io/tags/Scala%E8%AF%AD%E8%A8%80%E7%BB%AA%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>发文章</title>
    <link href="https://jackzhangqing.github.io/2023/09/02/%E5%8F%91%E6%96%87%E7%AB%A0/"/>
    <id>https://jackzhangqing.github.io/2023/09/02/%E5%8F%91%E6%96%87%E7%AB%A0/</id>
    <published>2023-09-02T08:11:49.000Z</published>
    <updated>2023-09-02T08:36:40.621Z</updated>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Nature-Science&quot;&gt;&lt;a href=&quot;#Nature-Science&quot; class=&quot;headerlink&quot; title=&quot;Nature Science&quot;&gt;&lt;/a&gt;Nature Science&lt;/h2&gt;</summary>
      
    
    
    
    <category term="学术界" scheme="https://jackzhangqing.github.io/categories/%E5%AD%A6%E6%9C%AF%E7%95%8C/"/>
    
    <category term="论文-" scheme="https://jackzhangqing.github.io/categories/%E5%AD%A6%E6%9C%AF%E7%95%8C/%E8%AE%BA%E6%96%87/"/>
    
    
    <category term="Academe" scheme="https://jackzhangqing.github.io/tags/Academe/"/>
    
  </entry>
  
  <entry>
    <title>Scala官方文档</title>
    <link href="https://jackzhangqing.github.io/2023/09/02/Scala%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3/"/>
    <id>https://jackzhangqing.github.io/2023/09/02/Scala%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3/</id>
    <published>2023-09-02T07:59:17.000Z</published>
    <updated>2023-09-02T08:35:57.754Z</updated>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-介绍&quot;&gt;&lt;a href=&quot;#1-介绍&quot; class=&quot;headerlink&quot; title=&quot;1.介绍&quot;&gt;&lt;/a&gt;1.介绍&lt;/h2&gt;&lt;h3 id=&quot;1-什么是Scala&quot;&gt;&lt;a href=&quot;#1-什么是Scala&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="工业界" scheme="https://jackzhangqing.github.io/categories/%E5%B7%A5%E4%B8%9A%E7%95%8C/"/>
    
    <category term="大数据高级开发Spark" scheme="https://jackzhangqing.github.io/categories/%E5%B7%A5%E4%B8%9A%E7%95%8C/%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%AB%98%E7%BA%A7%E5%BC%80%E5%8F%91Spark/"/>
    
    
    <category term="Scala文档" scheme="https://jackzhangqing.github.io/tags/Scala%E6%96%87%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title>32个经典算法</title>
    <link href="https://jackzhangqing.github.io/2023/09/02/32%E4%B8%AA%E7%BB%8F%E5%85%B8%E7%AE%97%E6%B3%95/"/>
    <id>https://jackzhangqing.github.io/2023/09/02/32%E4%B8%AA%E7%BB%8F%E5%85%B8%E7%AE%97%E6%B3%95/</id>
    <published>2023-09-02T07:49:41.000Z</published>
    <updated>2023-09-02T08:07:40.844Z</updated>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span c</summary>
      
    
    
    
    <category term="工业界" scheme="https://jackzhangqing.github.io/categories/%E5%B7%A5%E4%B8%9A%E7%95%8C/"/>
    
    <category term="数据结构与算法" scheme="https://jackzhangqing.github.io/categories/%E5%B7%A5%E4%B8%9A%E7%95%8C/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="经典算法" scheme="https://jackzhangqing.github.io/tags/%E7%BB%8F%E5%85%B8%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>冒泡排序算法思想</title>
    <link href="https://jackzhangqing.github.io/2023/09/02/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E6%80%9D%E6%83%B3/"/>
    <id>https://jackzhangqing.github.io/2023/09/02/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E6%80%9D%E6%83%B3/</id>
    <published>2023-09-02T06:48:13.000Z</published>
    <updated>2023-09-02T08:10:32.801Z</updated>
    
    
      
      
    <summary type="html">&lt;p&gt;冒泡排序算法是把较小的元素往前调或者把较大的元素往后调。这种方法主要是通过对相邻两个元素进行大小的比较，根据比较结果和算法规则对该二元素的位置进行交换，这样逐个依次进行比较和交换，就能达到排序目的。冒泡排序的基本思想是，首先将第1个和第2个记录的关键字比较大小，如果是逆序的</summary>
      
    
    
    
    <category term="工业界" scheme="https://jackzhangqing.github.io/categories/%E5%B7%A5%E4%B8%9A%E7%95%8C/"/>
    
    <category term="数据结构与算法" scheme="https://jackzhangqing.github.io/categories/%E5%B7%A5%E4%B8%9A%E7%95%8C/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="冒泡排序" scheme="https://jackzhangqing.github.io/tags/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>LeteCode Solution Overview</title>
    <link href="https://jackzhangqing.github.io/2023/09/02/LeteCode-Solution-Overview/"/>
    <id>https://jackzhangqing.github.io/2023/09/02/LeteCode-Solution-Overview/</id>
    <published>2023-09-02T05:20:49.000Z</published>
    <updated>2023-09-02T08:10:30.609Z</updated>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/weixin_44232942/article/details/106457056&quot;&gt;LeteCode 解题总览&lt;/a&gt;&lt;/p&gt;
</summary>
      
    
    
    
    <category term="找工作" scheme="https://jackzhangqing.github.io/categories/%E6%89%BE%E5%B7%A5%E4%BD%9C/"/>
    
    <category term="面试" scheme="https://jackzhangqing.github.io/categories/%E6%89%BE%E5%B7%A5%E4%BD%9C/%E9%9D%A2%E8%AF%95/"/>
    
    
    <category term="LeteCode" scheme="https://jackzhangqing.github.io/tags/LeteCode/"/>
    
  </entry>
  
</feed>
